blueprint:
  name: INVENTOCASA - PV Excess Optimizer
  description: "### **PV EXCESS OPTIMIZER**\nAutomatically control your appliances based on excess power from your solar system <br> <br>
  &rarr; Remember to read the **[README](https://github.com/InventoCasa/ha-advanced-blueprints/blob/main/PV_Excess_Control/README.md)** for prerequisites and installation instructions\n
  &rarr; If you need help, head over to the [thread in the HA community forum](https://community.home-assistant.io/t/pv-solar-excess-optimizer-auto-control-appliances-wallbox-dish-washer-heatpump-based-on-excess-solar-power/552677)\n
  &rarr; Bugs and feature requests can be created directly on the [GitHub repository](https://github.com/InventoCasa/ha-advanced-blueprints)\n\n
  &rarr; If you want to say *thank you* for this blueprint, you can do so by buying me a [*virtual coffee*](https://www.buymeacoffee.com/henrikIC)\n <br><br>"

  domain: automation
  input:
    automation_id:
      name: "Automation name"
      description: "**[IMPORTANT]\nThis field must contain the same name/entity_id you defined for this automation.\nThe name must be unique!\nYou can check your automation entity ID by clicking 
      on the three dots in the top right corner of your automation editor and selecting *info -> settings*. **"
      selector:
        text:
    appliance_priority:
      name: "Appliance priority"
      description: "Appliances with a higher number are prioritized compared to appliances with a lower number."
      default: 1
      selector:
        number:
          min: 1
          max: 1000
          mode: box
          unit_of_measurement: "Priority level"


    grid_voltage:
      name: "Mains Voltage"
      description: "The voltage of your household electrical grid (**not** your appliance!).\nTypically 230V for most of EU, 110V for US.\n\n 
      **[WARNING]\nThis value must be the same for all your created automations based on this blueprint!**"
      default: 230
      selector:
        number:
          min: 110
          max: 240
          mode: box
          unit_of_measurement: "V"

    pv_power:
      name: "PV Power"
      description: "Sensor which contains your current **PV generated power** in watts.\nMust not be negative! For best results, this sensor should be updated at least every minute.\n\n
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**"
      selector:
        entity:
          domain: sensor
          multiple: false
    export_power:
      name: "Export Power"
      description: "Sensor which contains your current **export power to the grid** in watts.\nMust not be negative! For best results, this sensor should be updated at least every minute.\n\n 
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**\n\n
      **[NOTE]**\nIf you can't measure this value directly, leave this field empty and provide a combined import/export power sensor."
      default:
      selector:
        entity:
          domain: sensor
          multiple: false

    load_power:
      name: "Load Power"
      description: "Sensor which contains your current **load power** (*combined household appliance consumption without home battery charging consumption*) in watts. Must not be negative!\nFor best results, this sensor should be updated at least every minute.\n\n
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**\n\n
      **[NOTE]**\nIf you can't measure this value directly, leave this field empty and provide a combined import/export power sensor.\n
      The combined household appliance consumption will always be prioritized, meaning that if you e.g. turn on your electric oven, and as a result the excess power is near zero, 
      your appliance with the lowest priority will be switched off (according to its On/Off switch interval)."
      default:
      selector:
        entity:
          domain: sensor
          multiple: false

    import_export_power:
      name: "Combined Import/Export Power"
      description: "Sensor which contains **both**, your current **import power from the grid** (*positive* values) and your current **export power to the grid** in watts (*negative* values).\nFor best results, this sensor should be updated at least every minute.\n\n 
      **[WARNING]\nDo not use this sensor when you have a hybrid inverter with battery. Otherwise the script cannot detect when your battery is discharging to compensate for a load.**\n\n
      **[NOTE]**\nThis is typically the value your household energy meter shows."
      default:
      selector:
        entity:
          domain: sensor
          multiple: false


    home_battery_level:
      name: "Home battery level"
      description: "Sensor which represents the **charge level of your home battery** (in percent)\n\n
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**\n\n
      **[NOTE]**\nIf your solar system is not coupled with a battery, leave this field empty"
      default:
      selector:
        entity:
          domain: sensor
          multiple: false

    min_home_battery_level:
      name: "Minimum home battery level (end of day)"
      description: "Minimum desired power level (in percent) of your home battery (end of day)\n\n
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**\n\n
      **[NOTE]**\n
      - If your solar system is not coupled with a battery, this field will be ignored.\n
      - *If you also specify **solar production forecast***, the script will optimize your PV excess consumption right away and ensure that the specified *minimum home battery level* is reached at the **end of the day**.\n
      - *If you **do not** specify solar production forecast*, the home battery will be charged to the specified level *before* switching on appliances."
      default: 100
      selector:
        number:
          min: 0
          max: 100
          step: 5
          unit_of_measurement: "%"

    home_battery_capacity:
      name: "Home battery capacity"
      description: "The usable capacity (in kWh) of your home battery\n\n
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**\n\n
      **[NOTE]**\n
      - If your solar system is not coupled with a battery, this field will be ignored."
      default: 0
      selector:
        number:
          min: 0
          max: 60
          step: 0.5
          unit_of_measurement: kWh

    solar_production_forecast:
      name: "*Remaining* solar production forecast (Solcast)"
      description: "Sensor which represents the **remaining solar production forecast** for the current day (in kWh). Will be used to ensure the specified *minimum home battery level* is reached at the end of the day.\n\n
      **[WARNING]\nThis sensor must be the same for all your created automations based on this blueprint!**\n\n
      **[NOTE]**\nIf your solar system is not coupled with a battery, leave this field empty"
      default:
      selector:
        entity:
          domain: sensor
          multiple: false


    appliance_switch:
      name: "Appliance Entity"
      description: "Entity to control the appliance (e.g. switch entity, climate entity, light entity, ...)"
      selector:
        entity:
          multiple: false
    appliance_switch_interval:
      name: "Appliance On/Off switch interval"
      description: "Defines the minimum time (in minutes) before switching the appliance on/off again.\nWill also be used as the averaging interval for available excess power.\n\n
      **[NOTE]**\n
      When first creating and executing your automation, it will most likely take the here defined time till your appliance can switch on, even if enough excess solar is available beforehand.\n
      This is due to the excess_history getting populated with zeros at the beginning."
      default: 5
      selector:
        number:
          min: 1
          max: 60
          step: 1
          unit_of_measurement: min


    appliance_on_only:
      name: "Only-On-Appliance"
      description: "Tick this box if your appliance should only be turned on, but **never off**.\nUseful e.g. for washing machines, which should not be turned off even if there is not enough solar power anymore."
      default: False
      selector:
        boolean:
    dynamic_current_appliance:
      name: "Dynamic current control"
      description: "Tick this box if your appliance supports different current levels.\nUseful e.g. for **wallboxes**.\nIf False, the appliance will only be switched on or off in relation to the PV excess."
      default: False
      selector:
        boolean:
    appliance_current_set_entity:
      name: "Appliance SetCurrent entity"
      description: "The number entity to which the calculated current will be sent.\n\n
      **[NOTE]\nOnly relevant when dynamic current control is set!**\nLeave empty if *dynamic current control* is deactivated."
      default:
      selector:
        entity:
          domain: number
          multiple: false
    min_current:
      name: "Minimum dynamic current"
      description: "Minimum current per phase your appliance can handle.\n\n
      **[NOTE]\nOnly relevant when dynamic current control is set!**\nLeave empty if *dynamic current control* is deactivated."
      default: 6
      selector:
        number:
          min: 0.1
          max: 16
          step: 0.1
          unit_of_measurement: A
    max_current:
      name: "Maximum dynamic current"
      description: "Maximum current per phase your appliance can handle.\n\n
      **[NOTE]\nOnly relevant when dynamic current control is set!**\nLeave empty if *dynamic current control* is deactivated."
      default: 16
      selector:
        number:
          min: 0.1
          max: 16
          step: 0.1
          unit_of_measurement: A
    three_phase_appliance:
      name: "Three Phase Appliance"
      description: "Tick this box if you have a three-phase appliance **and** your appliance is configured for three-phase power use.\nOtherwise untick the box."
      default: False
      selector:
        boolean:


    defined_current:
      name: "Appliance typical current draw"
      description: "Typical/expected current draw of your appliance.\nRelevant for deciding how much excess is needed before turning the specific appliance on.\n 
      If your appliance supports dynamic current setting, set the *typical current* to the same value as the *minimum dynamic current*."
      default: 6
      selector:
        number:
          min: 0.1
          max: 16
          step: 0.1
          unit_of_measurement: A
    actual_power:
      name: "Appliance actual power sensor"
      description: "Sensor which contains the **current power consumption** of the appliance in watts.\n
      If this is left empty (not recommended), the *typical current draw* will be used instead."
      default:
      selector:
        entity:
          domain: sensor
          multiple: false



mode: single
trigger:
- platform: homeassistant
  event: start


action:
  - service: pyscript.pv_excess_control
    data:
      automation_id: !input automation_id
      appliance_priority: !input appliance_priority
      export_power: !input export_power
      pv_power: !input pv_power
      load_power: !input load_power
      home_battery_level: !input home_battery_level
      min_home_battery_level: !input min_home_battery_level
      dynamic_current_appliance: !input dynamic_current_appliance
      three_phase_appliance: !input three_phase_appliance
      min_current: !input min_current
      max_current: !input max_current
      appliance_switch: !input appliance_switch
      appliance_switch_interval: !input appliance_switch_interval
      appliance_current_set_entity: !input appliance_current_set_entity
      actual_power: !input actual_power
      defined_current: !input defined_current
      appliance_on_only: !input appliance_on_only
      grid_voltage: !input grid_voltage
      import_export_power: !input import_export_power
      home_battery_capacity: !input home_battery_capacity
      solar_production_forecast: !input solar_production_forecast